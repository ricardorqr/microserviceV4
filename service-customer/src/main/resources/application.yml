server:
  port: 8081

spring:
  application:
    name: service-customer

  datasource: # MariaDB
    driver-class-name: org.mariadb.jdbc.Driver
    url: jdbc:mariadb://localhost:33067/example
    username: root
    password: example
  jpa:
    database-platform: org.hibernate.dialect.MariaDB103Dialect
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MariaDB103Dialect
#        format_sql: true
    hibernate:
      ddl-auto: update
    show-sql: true

  zipkin: # Zipkin Tracing Server. It connects to the Zipkin server docker image
    base-url: http://localhost:9411

springdoc:  # Swagger documentation
  swagger-ui:
    url: /customer-api.yml
    path: /swagger

eureka: # Eureka Server. It connects to the Eureka server service
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka
    fetch-registry: true
    register-with-eureka: true

feign:
  circuitbreaker:
    enabled: true

resilience4j:
  circuitbreaker:
#    instances:
#      customerAddCustomer:
#        registerHealthIndicator: true
#        slidingWindowSize: 10
#        permittedNumberOfCallsInHalfOpenState: 3
#        slidingWindowType: TIME_BASED
#        minimumNumberOfCalls: 20
#        waitDurationInOpenState: 50s
#        failureRateThreshold: 50
#        eventConsumerBufferSize: 10
#        automaticTransitionFromOpenToHalfOpenEnabled: true
#        recordFailurePredicate: com.microservice.customer.exception.RecordFailurePredicate

  retry:
    instances:
      customerAddCustomer:
        maxAttempts: 3
        waitDuration: 3s
#        enableExponentialBackoff: true
#        exponentialBackoffMultiplier: 2
#        retryExceptions:
#          - org.springframework.web.client.HttpServerErrorException
#          - java.io.IOException
#        ignoreExceptions:
#          - com.microservice.customer.exception.BusinessException

management:
  health:
    circuitbreakers:
      enabled: true
  endpoints:
    web:
      exposure:
        include: health
  endpoint:
    health:
      show-details: always